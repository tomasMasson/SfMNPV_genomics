# Activate conda environment with lumpy-sv 
conda activate lumpy

# Reads alignment and mark duplicates
bwa mem -R "@RG\tID:id\tSM:sample\tLB:lib" sfmnpv.fa sfmnpv_reads1.fq sfmnpv_reads2.fq | samblaster --excludeDups --addMateTags --maxSplitCount 2 --minNonOverlap 20 | samtools view -Sb - > lumpy-sv.bam

# Take discordant reads
samtools view -b -F 1294 lumpy-sv.bam > discordant_lumpy-sv_unsorted.bam 

# Take splitted reads
samtools view -h lumpy-sv.bam | ~/miniconda3/envs/lumpy/bin/extractSplitReads_BwaMem -i stdin | samtools view -Sb - > splitters_lumpy-sv_unsorted.bam

# Sort discordant and splitted reads
samtools sort discordant_lumpy-sv_unsorted.bam -o discordant_lumpy-sv.bam

samtools sort splitters_lumpy-sv_unsorted.bam -o splitters_lumpy-sv.bam

# Compute library insert size mean and standard deviation
samtools view lumpy-sv.bam | tail -n 100000 | ~/miniconda3/env/lumpy/share/lumpy-sv-0.3.0-3/scripts/pairend_distro.py -r 101 -X 4 -N 10000 -o lib1.histo
# Library mean insert size is 439 and the standard deviation 118

# Run lumpy-sv SV calling
lumpy -mw 4 -tt 0 -pe id:sfmnpv,bam_file:discordant_lumpy-sv.bam,histo_file:lib1.histo,mean:439,stdev:118,read_length:101,min_non_overlap:101,discordant_z:5,back_distance:10,weight:1,min_mapping_threshold:20 -sr id:sfmnpv,bam_file:splitters_lumpy-sv.bam,back_distance:10,weight:1,min_mapping_threshold:20 > sfmnpv_lumpy-sv.vcf

